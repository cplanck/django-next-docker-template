#This works for ssl hosting
events {}

# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     # Redirect HTTP to HTTPS for both domains
#     server {
#         listen 80;
#         server_name citestingx.com api.citestingx.com;
#         return 301 https://$host$request_uri;
#     }

#     # HTTPS for citestingx.com
#     server {
#         listen 443 ssl;
#         server_name citestingx.com;

#         ssl_certificate /etc/letsencrypt/live/citestingx.com/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/citestingx.com/privkey.pem;

#         location / {
#             proxy_pass http://frontend:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }

#     # HTTPS for api.citestingx.com
#     server {
#         listen 443 ssl;
#         server_name api.citestingx.com;

#         ssl_certificate /etc/letsencrypt/live/citestingx.com/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/citestingx.com/privkey.pem;

#         location / {
#             proxy_pass http://backend:8000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }



#This works for non-ssl hosting
events {}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Frontend server block for mydomain.com
    server {
        listen 80;
        server_name citestingx.com;

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Backend server block for api.mydomain.com
    server {
        listen 80;
        server_name api.citestingx.com;

        location / {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}







# events {}

# http {
#     include       mime.types;
#     default_type  application/octet-stream;
    
#     server {
#         listen 80;
        
        
#         # Route to Next.js
#         location / {
#             proxy_pass http://frontend:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
        
#         # Route to Django backend
#         location /api/ {
#             proxy_pass http://backend:8000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }

